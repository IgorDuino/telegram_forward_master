from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup
from models import Rule, Filter, Folder
from typing import List, Union
from random import randint


def main_menu(state):
    keyboard = InlineKeyboardMarkup()

    keyboard.add(
        InlineKeyboardButton(text="–ü—Ä–∞–≤–∏–ª–∞ –∏ –ø–∞–ø–∫–∏", callback_data=f"all-rules@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ", callback_data=f"add-rule-type@{randint(1, 100)}@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –ø–∞–ø–∫—É", callback_data=f"add-folder@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–û–±—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã", callback_data=f"filters_general@{randint(1, 100)}@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –æ–±—â–∏–π —Ñ–∏–ª—å—Ç—Ä", callback_data=f"add-filter_general@{randint(1, 100)}@{randint(1, 100)}"))
    if state:
        keyboard.add(
            InlineKeyboardButton(text="–û—Ç–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞ üî¥", callback_data=f"disable-bot@{randint(1, 100)}"))
    else:
        keyboard.add(
            InlineKeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞ üü¢", callback_data=f"enable-bot@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã", callback_data=f"docker-restart@{randint(1, 100)}"))

    return keyboard


def add_rule_type_menu(n: int):
    keyboard = InlineKeyboardMarkup()

    keyboard.add(
        InlineKeyboardButton(text="–û—Ç —á–µ–ª–æ–≤–µ–∫–∞" if n == 1 else "–ß–µ–ª–æ–≤–µ–∫—É", callback_data=f"add-rule-user_{n}@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–ò–∑ —á–∞—Ç–∞" if n == 1 else "–í —á–∞—Ç", callback_data=f"add-rule-chat_{n}@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞ üö´", callback_data=f"all-rules_remove-temp-rule@{randint(1, 100)}"))

    return keyboard


def rules_and_folders(elements: List[Union[Rule, Folder]]):
    keyboard = InlineKeyboardMarkup()

    for i, element in enumerate(elements):
        if type(element) == Rule:
            rule = element
            status = "üü¢" if rule.is_enabled else "üî¥"
            keyboard.add(
                InlineKeyboardButton(text=f"{status}  {rule.name}", callback_data=f"rule_{rule.id}@{randint(1, 100)}"))

        elif type(element) == Folder:
            folder = element
            status = "üü¢" if folder.is_enabled else "üî¥"
            keyboard.add(
                InlineKeyboardButton(text=f"üìÅ {status}  {folder.name}", callback_data=f"folder_{folder.id}@{randint(1, 100)}"))

    keyboard.add(InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥ üîô", callback_data=f"main-menu@{randint(1, 100)}"))

    return keyboard


def rule_menu(rule: Rule):
    keyboard = InlineKeyboardMarkup()

    if rule.is_enabled:
        keyboard.add(
            InlineKeyboardButton(text="–û—Ç–∫–ª—é—á–∏—Ç—å üî¥", callback_data=f"disable-rule_{rule.id}@{randint(1, 100)}"))
    else:
        keyboard.add(
            InlineKeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å üü¢", callback_data=f"enable-rule_{rule.id}@{randint(1, 100)}"))

    keyboard.add(
        InlineKeyboardButton(text="–§–∏–ª—å—Ç—Ä—ã", callback_data=f"filters_{rule.id}@{randint(1, 100)}"))

    keyboard.add(
        InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ", callback_data=f"delete-rule_{rule.id}@{randint(1, 100)}"))

    if rule.folder_id:
        keyboard.add(
            InlineKeyboardButton(text="–£–±—Ä–∞—Ç—å –∏–∑ –ø–∞–ø–∫–∏", callback_data=f"remove-from-folder_{rule.id}@{randint(1, 100)}"))

    keyboard.add(InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥ üîô", callback_data=f"all-rules@{randint(1, 100)}"))
    return keyboard


def folder_menu(folder: Folder, rules):
    keyboard = InlineKeyboardMarkup()

    if folder.is_enabled:
        keyboard.add(
            InlineKeyboardButton(text="–û—Ç–∫–ª—é—á–∏—Ç—å", callback_data=f"disable-folder_{folder.id}@{randint(1, 100)}"))
    else:
        keyboard.add(
            InlineKeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å ", callback_data=f"enable-folder_{folder.id}@{randint(1, 100)}"))

    for i, rule in enumerate(rules):
        status = "üü¢" if rule.is_enabled else "üî¥"
        keyboard.add(
            InlineKeyboardButton(text=f"{status}  {rule.name}", callback_data=f"rule_{rule.id}@{randint(1, 100)}"))

    keyboard.add(
        InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É", callback_data=f"delete-folder_{folder.id}@{randint(1, 100)}"))

    keyboard.add(InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥ üîô", callback_data=f"all-rules@{randint(1, 100)}"))
    return keyboard

def add_filter_trigger_menu():
    keyboard = InlineKeyboardMarkup()

    keyboard.add(
        InlineKeyboardButton(text="–°–ª–æ–≤–æ –∏–ª–∏ —Ñ—Ä–∞–∑—É", callback_data=f"add-filter-trigger_phrase@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–ß–∞—Å—Ç—å —Å–ª–æ–≤–∞", callback_data=f"add-filter-trigger_part@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–õ—é–±–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", callback_data=f"add-filter-trigger_phone@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–õ—é–±—É—é –ø–æ—á—Ç—É", callback_data=f"add-filter-trigger_mail@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="Telegram –Ω–∏–∫", callback_data=f"add-filter-trigger_telegram@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–õ—é–±—É—é —Å—Å—ã–ª–∫—É", callback_data=f"add-filter-trigger_link@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã", callback_data=f"add-filter-trigger_card@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞ üö´", callback_data=f"all-rules_remove-temp-filter@{randint(1, 100)}"))

    return keyboard


def add_filter_action_menu():
    keyboard = InlineKeyboardMarkup()

    keyboard.add(
        InlineKeyboardButton(text="–ó–∞–º–µ–Ω–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä", callback_data=f"add-filter-action_phrase@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä", callback_data=f"add-filter-action_delete@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–ù–µ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data=f"add-filter-action_cancel-forward@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–û—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ", callback_data=f"add-filter-action_disable-rule@{randint(1, 100)}"))

    keyboard.add(
        InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞ üö´", callback_data=f"all-rules_remove-temp-filter@{randint(1, 100)}"))

    return keyboard


def filters_menu(rule_id, filters: List[Filter]):
    keyboard = InlineKeyboardMarkup()

    for i, filter in enumerate(filters):
        status = "üü¢" if filter.is_enabled else "üî¥"

        keyboard.add(
            InlineKeyboardButton(text=f"{status} {i+1}. {filter.name}", callback_data=f"filter_{filter.id}@{randint(1, 100)}"))

    if rule_id == -1:
        keyboard.add(InlineKeyboardButton(
            text="–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä", callback_data=f"add-filter_general@{randint(1, 100)}"))
    else:
        keyboard.add(InlineKeyboardButton(
            text="–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä", callback_data=f"add-filter_{rule_id}@{randint(1, 100)}"))

    if rule_id == -1:
        keyboard.add(InlineKeyboardButton(
            text="–ù–∞–∑–∞–¥ üîô", callback_data=f"main-menu@{randint(1, 100)}"))
    else:
        keyboard.add(InlineKeyboardButton(
            text="–ù–∞–∑–∞–¥ üîô", callback_data=f"rule_{rule_id}@{randint(1, 100)}"))

    return keyboard


def filter_menu(filter: Filter):
    keyboard = InlineKeyboardMarkup()

    if filter.is_enabled:
        keyboard.add(
            InlineKeyboardButton(text="–û—Ç–∫–ª—é—á–∏—Ç—å üî¥", callback_data=f"disable-filter_{filter.id}@{randint(1, 100)}"))
    else:
        keyboard.add(
            InlineKeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å üü¢", callback_data=f"enable-filter_{filter.id}@{randint(1, 100)}"))
    keyboard.add(
        InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä", callback_data=f"delete-filter_{filter.id}@{randint(1, 100)}"))

    if filter.is_general:
        keyboard.add(
            InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîô", callback_data=f"all-rules@{randint(1, 100)}"))
    else:
        keyboard.add(
            InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîô", callback_data=f"rule_{filter.rule_id}@{randint(1, 100)}"))

    return keyboard
